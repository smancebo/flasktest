function machineService(e,n){function t(e,t){return n.post(a+"/machine/add",e)}function i(){return n.get(a+"/machine/list")}function c(e){return n.get(a+"/machine/get/"+e)}function o(e){return n.post(a+"/machine/delete",{_id:e})}var a=e.api;return{addMachine:t,getMachinelist:i,getMachine:c,deleteMachine:o}}function alertsService(e){function n(e,n){}function t(e,n){}return{show:n,confirm:t}}!function(){function e(e,n){n.otherwise("/"),e.state("home",{url:"/",templateUrl:"remote_exec/remote_exec.html",controller:"remoteExecController",controllerAs:"$ctrl"})}e.$inject=["$stateProvider","$urlRouterProvider"];var n=angular.module("flaskApp",["ui.router","templates","ui.bootstrap"]);n.config(e),n.constant("$config",{api:"http://10.0.0.11:5000"})}();var app=angular.module("flaskApp");app.factory("machineService",machineService),machineService.$inject=["$config","$http"];var app=angular.module("flaskApp");app.factory("$alerts",alertsService),alertsService.$inject=["$uibModal"],function(){"use strict";function e(e,n,t){function i(){t.getMachinelist().then(function(e){c.machineList=e.data})}var c=this;i(),c.openAddMachine=function(){function e(e,n){var i=this;void 0!==n?(i.info=n,i.edit=!0):(i.info={},i.edit=!1),i.addMachine=function(){t.addMachine(i.info).then(function(){t.getMachinelist().then(function(n){c.machineList=[],c.machineList=n.data,e.dismiss("cancel")})})},i.cancel=function(){e.dismiss("cancel")}}e.$inject=["$uibModalInstance","info"];var i=n.open({animation:!0,templateUrl:"remote_exec/addmachine.html",controller:e,controllerAs:"$modalCtrl",resolve:{info:function(){return c.info}}});i.closed.then(function(){c.info=void 0})},c.editMachine=function(e){t.getMachine(e._id).then(function(e){c.info=e.data,c.edit=!0,c.openAddMachine()})},c.deleteMachine=function(e){t.deleteMachine(e._id).then(function(e){console.log(e),i()})}}var n=angular.module("flaskApp");n.controller("remoteExecController",e),e.$inject=["$scope","$uibModal","machineService"]}();
//# sourceMappingURL=data:application/json;base64,
